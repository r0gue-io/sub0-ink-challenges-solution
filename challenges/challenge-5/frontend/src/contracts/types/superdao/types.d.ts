// Generated by dedot cli

import type { AccountId32, FixedBytes, Bytes, AccountId32Like, BytesLike } from 'dedot/codecs';

export type InkStorageLazyMapping = {};

export type Superda0TraitsSuperdaoProposal = { call: Superda0TraitsSuperdaoCall; votingPeriodEnd: number };

export type Superda0TraitsSuperdaoCall =
  | { type: 'Contract'; value: Superda0TraitsSuperdaoContractCall }
  | { type: 'Chain'; value: Superda0TraitsSuperdaoChainCall };

export type Superda0TraitsSuperdaoCallLike =
  | { type: 'Contract'; value: Superda0TraitsSuperdaoContractCallLike }
  | { type: 'Chain'; value: Superda0TraitsSuperdaoChainCallLike };

export type Superda0TraitsSuperdaoContractCall = {
  callee: AccountId32;
  selector: FixedBytes<4>;
  input: Bytes;
  transferredValue: bigint;
  refTimeLimit: bigint;
  allowReentry: boolean;
};

export type Superda0TraitsSuperdaoContractCallLike = {
  callee: AccountId32Like;
  selector: FixedBytes<4>;
  input: BytesLike;
  transferredValue: bigint;
  refTimeLimit: bigint;
  allowReentry: boolean;
};

export type Superda0TraitsSuperdaoChainCall = { dest: Bytes; msg: Bytes };

export type Superda0TraitsSuperdaoChainCallLike = { dest: BytesLike; msg: BytesLike };

export type InkStorageTraitsImplsResolverKey = {};

export type InkStorageTraitsImplsAutoKey = {};

export type InkStorageTraitsImplsManualKey = {};

export type Superda0TraitsSuperdaoVote = 'Aye' | 'Nay';

export type Superdao = {
  members: Array<AccountId32>;
  proposals: InkStorageLazyMapping;
  activeProposals: Array<number>;
  votes: InkStorageLazyMapping;
  nextId: number;
  voteThreshold: number;
  votingPeriod: number;
};

export type InkPrimitivesLangError = 'CouldNotReadInput';

export type Superda0TraitsSuperdaoError = 'DispatchFailed' | 'AlreadyMember' | 'NotMember' | 'ProposalNotFound';

export type InkEnvNoChainExtension = null;
